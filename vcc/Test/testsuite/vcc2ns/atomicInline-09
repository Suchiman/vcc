#include "vcc.h"

vcc(atomic_inline)
long _InterlockedIncrement(long volatile *target)
#ifdef VERIFY
{
    unchecked(*target++);
    // Also crashes: *target++ and with --
    return *target;
}
#endif
;

struct S {
    volatile long a;
};

void foo() {
    struct S s;
    spec(claim_t c;)
    wrap(&s);
    assert(not_shared(&s));
    atomic (&s) {
        _InterlockedIncrement(&s.a);
    }
    unwrap(&s);
}
`
Verification of foo failed.
testcase(24,31) : error VC8512: Assertion '&s.a is thread local or atomically updated' did not verify.
`
