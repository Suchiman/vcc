#include "vcc.h"

void foo()
{
  spec(char *xyz[char*];)
  spec(int foo[int*];)
  char arr[10];
  int x = 20;

  spec(xyz = lambda(char *c; c != 0; c + 1);)
  spec(foo = lambda(int *p; typed(p) && *p < 100; *p + 1);)
  
  assert(xyz[&arr[1]] == &arr[2]);
  assert(foo[&x] == 21);
}

void fail1()
{
  spec(int foo[int*];)
  int x = 120;

  spec(foo = lambda(int *p; typed(p) && *p < 100; *p + 1);)
  assert(foo[&x] == 121);
}

void fail2()
{
  spec(int foo[int*];)
  int x = 20;

  spec(foo = lambda(int *p; typed(p) && *p < 100; *p + 1);)
  assert(foo[&x] == 22);
}

`
Verification of foo succeeded.
Verification of fail1 failed.
testcase(23,12) : error VC9500: Assertion 'foo[&x] == 121' did not verify.
Verification of fail2 failed.
testcase(32,12) : error VC9500: Assertion 'foo[&x] == 22' did not verify.
`
