#include <vcc2test.h>

typedef unsigned char byte;

void *alloc(unsigned __int64  sz)
  _(ensures \object_root((void[sz])((byte*)\result)))
  _(ensures \mutable((void[sz])((byte*)\result)))
  _(ensures \fresh((void[sz])((byte*)\result)))
  ;

struct A {
  int x , y;
};
struct B {
  struct A a1;
  struct A a2;
  int x;
};

void f1()
{
  struct B * b = alloc(sizeof(struct B));
  _(from_bytes b, \false)
  b->a1.x = 10;
  b->a2.y = 20;
  b->x = 20;
}

void mfree(void *p _(ghost unsigned __int64 sz))
  _(writes \extent((void[sz])((byte*)p)));

void f2()
{
  struct B * b = alloc(sizeof(struct B));
  _(from_bytes b, \false)
  b->a1.x = 10;
  b->a2.y = 20;
  b->x = 20;
  _(to_bytes b)
  mfree(b _(ghost sizeof(*b)));
}

`
Verification of f1 succeeded.
Verification of f2 succeeded.
`
