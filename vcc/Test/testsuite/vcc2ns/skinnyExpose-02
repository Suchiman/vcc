#include <vcc.h>

struct vcc(dynamic_owns) B {
  int x;
  int y;
};
struct A {
  int z;
  struct B *b;
  invariant(keeps(b))
};

void foo(struct A *a)
  maintains(wrapped(a))
  writes(a)
  ensures(domain_updated_at(a, SET(&a->b->x)))
{
  skinny_expose(a, a->b)
    writes(&a->b->x)
  {
    a->b->x = 12;
  }
}

struct B2 {
  int x;
  int y;
};
struct A2 {
  int z;
  struct B2 *b;
  struct B2 *b2;
  invariant(keeps(b))
  invariant(keeps(b2))
};

void foo2(struct A2 *a)
  maintains(wrapped(a))
  writes(a)
  ensures(domain_updated_at(a, SET(&a->b->x)))
{
  skinny_expose(a, a->b)
    writes(&a->b->x)
  {
    a->b->x = 12;
  }
}

`
Verification of A#adm succeeded.
Verification of A2#adm succeeded.
Verification of foo succeeded.
Verification of foo2 succeeded.
`
