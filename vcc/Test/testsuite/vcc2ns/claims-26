#include "vcc.h"

struct vcc(claimable) S {
    int one;
    invariant(one==1)
};

void foo(struct S *s, int y claimp(c))
    always(c,closed(s))
    requires(y==1)
    writes(c)
{
    spec(claim_t d;)
    int x;
    spec(d = claim(c,closed(s) && s->one==1);)
    spec(d = claim(c,closed(s) && s->one==when_claimed(1));) // warn
    x = 1;
    spec(d = claim(c,closed(s) && s->one==when_claimed(x));) // warn
    spec(d = claim(c,closed(s) && s->one==when_claimed(y));) // warn
}
`
testcase(16,64) : warning VC9106: 'old', 'in_state', or 'when_claimed' in '_vcc_in_state(_vcc_when_claimed(), 1)' has no effect
testcase(18,64) : warning VC9106: 'old', 'in_state', or 'when_claimed' in '_vcc_in_state(_vcc_when_claimed(), x)' has no effect
testcase(19,64) : warning VC9106: 'old', 'in_state', or 'when_claimed' in '_vcc_in_state(_vcc_when_claimed(), y)' has no effect
Verification of S#adm succeeded.
Verification of foo succeeded.
`
