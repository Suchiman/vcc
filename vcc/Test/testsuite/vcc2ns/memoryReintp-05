#include "vcc.h"

typedef unsigned __int8 byte;

typedef struct C {
   int dummy;
} C;

typedef struct B {
    C c;
} B;

typedef struct A1 {
    B b;
} A1;

typedef struct vcc(dynamic_owns) gA {
    A1 g[10]; 
} gA;

void foo ()
 requires(is_object_root(as_array((byte*) 1024, sizeof(gA))))
 writes(extent(as_array((byte*) 1024, sizeof(gA))))
{
    gA* a;
    a = (gA*) 1024;
   
    from_bytes (a, false);
    assert(mutable(&a->g[0]));
    assert(mutable(&a->g[0].b));
    assert(mutable(&a->g[0].b.c));
}
`
Verification of foo succeeded.
`
