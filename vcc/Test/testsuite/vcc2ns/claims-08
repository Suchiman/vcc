#include <vcc.h>

struct Node {
    struct Node *next;

    invariant( depends(owner(this), this) )
};


typedef struct Node *PNode;
struct Stack {
    volatile PNode hd;
};

bool t1(struct Stack *s claimp(c))
    always (c, closed(s))
{
	atomic(c, s) {
	   wrap(s);
	}
}

bool t2(struct Stack *s claimp(c))
    always (c, closed(s))
{
	atomic(c, s) {
	   unwrap(s);
	}
}

void foo () { }

bool t3(struct Stack *s claimp(c))
    always (c, closed(s))
{
	atomic(c, s) {
		foo();
	}
}
`
testcase(19,5) : error VC9626: static_wrap(...) cannot be used inside atomic update/read
testcase(27,5) : error VC9626: static_unwrap(...) cannot be used inside atomic update/read
testcase(37,3) : error VC9627: ordinary functions like foo(...) cannot be used inside atomic update/read
`
