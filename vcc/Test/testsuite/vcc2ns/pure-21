#include "vcc.h"

spec(
ispure int foo(int x)
  ensures(result == result + 0);
)

spec(
ispure int bar(int x)
  ensures(result == x + 2)
  ensures(result == x + 2);
)

spec(
ispure int baz(int x)
  ensures(result < 3);
)

spec(
ispure int baz2(int x)
  ensures(x == result + 3);
)

spec(
ispure int ok1(int x)
  ensures(result == x + 2);
)


spec(
ispure int ok2(int x)
  ensures(x + 2 == result);
)

void usecase()
{
assert(foo(1)+bar(1)+baz(1)+ok1(1)+ok2(1)+baz2(3) == 3);
}

`
testcase(4,1) : warning VC9306: [possible unsoundness]: 'result' cannot be used recursively in a pure function definition
testcase(11,13) : warning VC9309: [possible unsoundness]: value of 'result' was already defined in this pure function contract (as 'result')
testcase(15,1) : warning VC9310: [possible unsoundness]: a non-equality postcondition in a pure function (not ensures(result == ...))
testcase(21,13) : warning VC9307: [possible unsoundness]: form of a pure function postcondition is neither 'result == ...' nor 'result.x.y.z == ...' (it is: +(result, 3))
Verification of usecase failed.
testcase(37,10) : error VC9500: Assertion 'foo(1)+bar(1)+baz(1)+ok1(1)+ok2(1)+baz2(3) == 3' did not verify.
`
