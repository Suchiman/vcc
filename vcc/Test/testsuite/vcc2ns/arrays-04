#include <vcc.h>

void donothing();

void swap(int *a, int *b, unsigned long width)
writes(array_range(a,width),array_range(b,width))
maintains(is_mutable_array(a,width))
maintains(is_mutable_array(b,width))
requires(a == b || set_disjoint(array_range(a,width),array_range(b,width)))
ensures(forall(unsigned long i; i < width; a[i] == old(b[i]) && b[i] == old(a[i])))
{
    int tmp;
    spec(unsigned long idx =0, width0 = width;)
    spec(int *a0 = a, *b0 = b;)


    if ( a!=b )
        while ( unchecked(width--) )
	    invariant(is_mutable_array(a0,width0))
            invariant(is_mutable_array(b0,width0))

            invariant(width+idx == width0)
            invariant(a == a0 + idx && b == b0 + idx)

            invariant(forall(unsigned long i; 0 <= i && i < idx; a0[i] == old(b0[i]) && b0[i] == old(a0[i])))
            invariant(forall(unsigned long i; idx <= i && i < width0; a0[i] == old(a0[i]) && b0[i] == old(b0[i])))
        {
	    donothing();
            tmp = *a;
            *a++ = *b;
            *b++ = tmp;
            spec(idx++;)
        }
}
`
Verification of swap succeeded.
`
