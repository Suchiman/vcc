#include "vcc.h"

struct B {
  int x;
  int y;
};

spec(
struct C {
  int x;
  spec(int y;)
};)

struct A {
  struct B *b;
  spec(struct C *c;)
  invariant(keeps(b) && keeps(c))
  invariant(b->x == c->y)
};

 
void foo(struct A *a)
  maintains(wrapped(a))
  writes(a)
  ensures(domain_updated_at(a, set_union(SET(&a->b->x), SET(&a->c->y))))
{
  skinny_expose(a, a->b, a->c)
    writes(&a->b->x)
	writes(&a->c->y)
  {
    a->b->x = 12;
	spec(a->c->y = 12;)
  }
}
`
Verification of A#adm succeeded.
Verification of foo succeeded.
`
