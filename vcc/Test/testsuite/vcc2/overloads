`/newsyntax
#include <vcc.h>

_(pure) int foo(int i) _(ensures \result == 1) {
  return 1;
}
_(pure) unsigned int foo(unsigned int ui) _(ensures \result == 2) {
  return 2;
}

void bar() {
  int i = 0;
  unsigned int ui = 1;
  
  i = foo(i);
  ui = foo(ui);
  _(assert i == 1)
  _(assert ui == 2)
}
`
Verification of foo#overload#int32_t#int32_t succeeded.
Verification of foo#overload#uint32_t#uint32_t succeeded.
Verification of bar succeeded.
`
`/newsyntax
#include "vcc.h"

struct S {
  int a;
};

void foo(struct S *s)
  _(writes s)
  _(maintains \wrapped(s)) 
  _(ensures s->a == 0)
{
  if (s->a != 0) {
    _(unwrapping s) {
    s->a = 0;
    }
  }
}

_(ghost 
void foo(struct S ^s)
  _(writes s)
  _(maintains \wrapped(s)) 
  _(ensures s->a == 1)
{
  if (s->a != 1) {
    _(unwrapping s) {
    s->a = 1;
    }
  }
})

void bar(struct S *s _(ghost struct S ^t))
  _(writes s,t)
  _(requires \wrapped(s) && \wrapped(t))
{
  foo(s);
  _(assert s->a == 0)
  _(ghost foo(t);)
  _(assert t->a == 1)
}
`
Verification of foo#overload#void#struct_S. succeeded.
Verification of foo#overload#void#spec_struct_S^ succeeded.
Verification of bar succeeded.
`
`/newsyntax
#include <vcc.h>

void foo(int i) { }

void foo(_(ghost int t)) { }

void foo(_(out int i)) { }
`
Verification of foo#overload#void#int32_t#overload#void#int32_t succeeded.
Verification of foo#overload#void#spec_int32_t succeeded.
Verification of foo#overload#void#out_int32_t succeeded.
`
`/newsyntax
#include <vcc.h>

struct S { int a; };
void overload(_(ghost struct S *s)) { };
void overload(struct S *s) { };
`
Verification of overload#overload#void#spec_struct_S. succeeded.
Verification of overload#overload#void#struct_S. succeeded.
`