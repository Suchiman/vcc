#include "vcc.h"

struct S {
  int a;
  spec(int b;)
  invariant(a > 0)
  invariant(public: a % 2 == 0)
  invariant(private: a == b)
  invariant(secret: b == 20)
};

void foo(struct S *s) 
  requires(wrapped(s))
{
  assert(s->a > 0 && s->a % 2 == 0);
}
  
void fooShouldFail(struct S *s) 
  requires(wrapped(s))
{
  assert(s->a == s->b);
}

void bar(struct S *s) 
  requires(wrapped(s))
{
  assert(in_domain(use(private, s), s));
  assert(s->a == s->b);  
}

void barShouldFail(struct S *s) 
  requires(wrapped(s))
{
  assert(in_domain(use(secret, s), s));
  assert(s->a == 20);  
}

void baz(struct S *s) 
  requires(wrapped(s))
{
  assert(in_domain(use(private|secret, s), s));
  assert(s->a == 20);  
}

`
Verification of S#adm succeeded.
Verification of foo succeeded.
Verification of fooShouldFail failed.
testcase(21,12) : error VC9500: Assertion 's->a == s->b' did not verify.
Verification of bar succeeded.
Verification of barShouldFail failed.
testcase(35,12) : error VC9500: Assertion 's->a == 20' did not verify.
Verification of baz succeeded.
`
#include "vcc.h"

struct S {
  int a;
  spec(int b;)
  invariant(a > 0)
  invariant(public: a % 2 == 0)
  invariant(private: a == b)
  invariant(secret: b == 20)
};

void foo(struct S *s) 
  requires(wrapped(s))
{
  assert(s->a > 0 && s->a % 2 == 0);
}
  
void fooShouldFail(struct S *s) 
  requires(wrapped(s))
{
  assert(s->a == s->b);
}

void bar(struct S *s) 
  requires(wrapped(s))
{
  assert(in_domain(use(private, s), s));
  assert(s->a == s->b);  
}

void barShouldFail(struct S *s) 
  requires(wrapped(s))
{
  assert(in_domain(use(secret, s), s));
  assert(s->a == 20);  
}

void baz(struct S *s) 
  requires(wrapped(s))
{
  assert(in_domain(use(private|secret, s), s));
  assert(s->a == 20);  
}

`
Verification of S#adm succeeded.
Verification of foo succeeded.
Verification of fooShouldFail failed.
testcase(21,12) : error VC9500: Assertion 's->a == s->b' did not verify.
Verification of bar succeeded.
Verification of barShouldFail failed.
testcase(35,12) : error VC9500: Assertion 's->a == 20' did not verify.
Verification of baz succeeded.
`
#include "vcc.h"

struct S {
  int a;
  spec(int b;)
  invariant(a > 0)
  invariant(public: a % 2 == 0)
  invariant(private: a == b)
  invariant(secret: b == 20)
};

void foo(struct S *s) 
  requires(wrapped(s))
{
  assert(s->a > 0 && s->a % 2 == 0);
}
  
void fooShouldFail(struct S *s) 
  requires(wrapped(s))
{
  assert(s->a == s->b);
}

void bar(struct S *s) 
  requires(wrapped(s))
{
  assert(in_domain(use(private, s), s));
  assert(s->a == s->b);  
}

void barShouldFail(struct S *s) 
  requires(wrapped(s))
{
  assert(in_domain(use(secret, s), s));
  assert(s->a == 20);  
}

void baz(struct S *s) 
  requires(wrapped(s))
{
  assert(in_domain(use(private|secret, s), s));
  assert(s->a == 20);  
}

`
Verification of S#adm succeeded.
Verification of foo succeeded.
Verification of fooShouldFail failed.
testcase(21,12) : error VC9500: Assertion 's->a == s->b' did not verify.
Verification of bar succeeded.
Verification of barShouldFail failed.
testcase(35,12) : error VC9500: Assertion 's->a == 20' did not verify.
Verification of baz succeeded.
`