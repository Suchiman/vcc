typedef unsigned __int32 uint32_t;

void x(uint32_t y);

void foo() {
    x(1<<32);
}
`
testcase(6,7) : error VC0000: Shift count must be between 0 and 31.
`
#include <vcc.h>

struct x { int a; };
void foo() { assert(x.a==x.a); }
`
testcase(4,23) : error VC0000: left of '.a' must have struct/union type
`
#include "vcc.h"
spec(ispure bool foo(unsigned n);)
spec(ispure bool bar(unsigned *map);)
axiom(forall(unsigned *p; { bar(p) } foo(*p)));

void f() {
  foo(5);
 }
`
Verification of f succeeded.
`
#include <vcc.h>

void test()
{
  assert(forall(mathint m; 0 < m; (1 % m) == (0 % m) ));
  assert(forall(mathint m; 0 < m; (1 / m) == (0 / m) ));
} 
`
Verification of test failed.
testcase(5,12) : error VC9500: Assertion '__forall(_vcc_integer_t m; 0 < m; (1 % m) == (0 % m) )' did not verify.
testcase(6,12) : error VC9500: Assertion '__forall(_vcc_integer_t m; 0 < m; (1 / m) == (0 / m) )' did not verify.
`
typedef struct __generated {
  int value;
} T;

void foo() {
  T t;
  t.value = 3;
}
`
Verification of foo succeeded.
`
#include "vcc.h"

void foo() {
    assert(set_eq(set_empty(),SET(SET())));
}
`
testcase(4,85) : error VC9706: Invalid type '_math ptrset' in SET expression.
`
#include "vcc.h"

int foo(int a, int *a) {
}
`
testcase(3,1) : error VC9707: 'a' : parameter redefinition
`
#include "vcc.h"

spec(
ptrset foo()
  ensures(set_eq(result, set_singleton((void *)0)))
{
  return set_empty();
}
)
`
Verification of foo failed.
testcase(3,93) : error VC9501: Post condition '_vcc_set_eq(result,_vcc_set_singleton((void *)0))' did not verify.
testcase(3,40) : error VC9599: (related information) Location of post condition.
`
#include "vcc.h"

struct S {
  void *y;
  invariant(y)
  spec(obj_t x;)
  invariant(x)
};

void foo() {
  struct S s;
  speconly(s.x = &s;)
  s.y = &s;
  wrap(&s);
  unwrap(&s);
}
`
Verification of S#adm succeeded.
Verification of foo succeeded.
`
#include <vcc.h>

bool foo();
void bar()
{
  assert(foo->b == 0);
} 
`
testcase(6,12) : error VC0000: The left of '->b' must point to a struct or union.
`
#include <vcc.h>

int foo(int i, int j) 
  requires(i)
  requires(!j)
{
  int k = known(i,true) && known(j,false);
  return k;
}

int bar(int i, int j) 
  requires(!j)
{
  int k = known(i,true) && known(j,false);
  return k;
}

int baz(int i, int j) 
  requires(!i)
  requires(!j)
{
  int k = known(i,true) && known(j,false);
  return k;
}

int qux(int i, int j)
  requires(i && !j)
{
  int k = known(i, true) && !(known(j, false));
  assert(k);
}
`
Verification of foo succeeded.
Verification of bar failed.
testcase(14,22) : error VC8533: Assertion 'i has the value ((bool)1) specified by known(...)' did not verify.
Verification of baz failed.
testcase(22,22) : error VC8533: Assertion 'i has the value ((bool)1) specified by known(...)' did not verify.
Verification of qux succeeded.
`