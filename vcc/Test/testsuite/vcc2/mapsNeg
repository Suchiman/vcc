#include "vcc.h"

struct A {
  int y;
  spec( int m[int]; )
};

void foo(struct A *a)
  requires(thread_local(a))
{
  speconly( a->m[12] = 11; )
}
`
Verification of foo failed.
testcase(11,44) : error VC8507: Assertion 'a->m is writable' did not verify.
`
void oopsExample() 
{
  int x;  
  unsigned int entries[unsigned int];
  for(x = 0; x<5; x++){
      entries[x] = x;
  }
}
`
testcase(6,15) : error VC0000: Cannot implicitly convert type '__int32' to 'unsigned __int32'.
`
#include "vcc2.h"

#define NULL (void*)0

void foo()
{
  spec(claim_t t;)
  assert(forall(int flag; (flag==0) ==> set_in(lambda(int x; true; (x==0 ? t : (void ^)0) )[flag], SET(t))));
} 
`
testcase(8,85) : error VC0000: Type of conditional expression cannot be determined because there are implicit conversions between '_vcc_claim_struct^' and 'void^'; try adding an explicit cast to one of the arguments.
`
#include "vcc.h"

void bar(unsigned i) {
    spec(unsigned a[unsigned];)
    speconly(a = lambda(unsigned j; true; i = 0);)
}
`
testcase(5,81) : error VC0000: Evaluating this expression has the side effect of modifying memory, which is not permitted in this context.
`