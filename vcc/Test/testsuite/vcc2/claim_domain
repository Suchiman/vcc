#include <vcc.h>

struct S { int a; };
struct T { int a; struct S s; invariant(keeps(&s)) };

void foo() writes(SET());

vcc_attr("no_infer","all")
void one(struct T *t claimp(c))
  always(c, closed(t))
{

  foo();
  assert(unchanged(t->a)); // should fail
}

void two(struct T *t claimp(c))
  always(c, closed(t))
{
  foo();
  assert(unchanged(t->a)); // should work
}

void three(struct T *t claimp(c))
  always(c, closed(t))
{

  foo();
  assert(unchanged(t->s.a)); // should fail
}

void four(struct T *t claimp(c))
  always(c, closed(t))
{

  assert(in_claim_domain(&t->s,c));
  foo();
  assert(unchanged(t->s.a)); // should work
}

`
Verification of T#adm succeeded.
Verification of one failed.
testcase(14,13) : error VC9500: Assertion '__old(t->a) == (t->a)' did not verify.
Verification of two succeeded.
Verification of three failed.
testcase(29,13) : error VC9500: Assertion '__old(t->s.a) == (t->s.a)' did not verify.
Verification of four succeeded.
`
