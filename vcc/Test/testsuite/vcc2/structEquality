
#include <vcc2.h>

union vcc(dynamic_owns) U {
  unsigned __int64 a;
  __int64 b;
  int c;
  unsigned int d;
  struct {
    int e;
    int f;
  } x;
  
  
  invariant(union_active(this, x) ==> set_in(&this->x, owns(this)))
};

struct S {
  int a;
  int b;
  spec(int m[int];)
};

struct T {
  int a;
  int b;
  struct S s1;
  struct S s2;
  union U u1,u2;
  
  invariant(keeps(&s1, &s2, &u1, &u2))
  invariant(deep_eq(&s1, &s2))
  invariant(deep_eq(&u1, &u2))
};


bool eq_S(struct S s1, struct S s2) 
  requires(deep_eq(&s1, &s2))
{
  assert(s1.a == s2.a);
  assert(s1.b == s2.b);
  assert(s1.m == s2.m);
}

bool eq_T(struct T t1, struct T t2) 
  requires(deep_eq(&t1, &t2))
{
  assert(t1.a == t2.a);
  assert(t1.b == t2.b);
  assert(deep_eq(&t1.s1, &t2.s1));
  assert(deep_eq(&t1.s2, &t2.s2));
}

`
testcase(21,3) : warning VC9108: structured type equality treats map equality as map identity
Verification of U#adm succeeded.
Verification of T#adm succeeded.
Verification of eq_S succeeded.
Verification of eq_T succeeded.
`
#include <vcc2.h>

struct A {
  int x[3];
};

struct B {
  struct A a;
  int z;
  invariant(keeps(&a))
  invariant(a.x[0] == 10)
};

struct C {
  struct A a1;
  struct A a2;
  int z;
  invariant(keeps(&a1, &a2))
  invariant(deep_eq(&a1, &a2))
};

struct D {
  struct A a1;
  struct A a2;
  int z;
  invariant(keeps(&a1))
  invariant(deep_eq(&a1, &a2))
};

void foo()
{
  struct A a, b;
  a.x[0] = 1;
  a.x[1] = 2;
  a.x[2] = 3;
  b.x[0] = 1;
  b.x[1] = 2;
  b.x[2] = 3;
  assert(deep_eq(&a, &b));
}

void bar()
{
  struct A a, b;
  a.x[0] = 1;
  a.x[1] = 2;
  a.x[2] = 3;
  b.x[0] = 1;
  b.x[1] = 2;
  b.x[2] = 4;
  assert(deep_eq(&a, &b));
}
`
Verification of B#adm succeeded.
Verification of C#adm succeeded.
Verification of D#adm failed.
testcase(27,15) : error VC8012: invariant(_vcc_deep_struct_eq(&a1, &a2)) of D is not admissible.
Verification of foo succeeded.
Verification of bar failed.
testcase(51,12) : error VC9500: Assertion '_vcc_deep_struct_eq(&a, &b)' did not verify.
`
#include "vcc2.h"

void foo(void *);

struct A {
  int x, y, z;
};

void test1(struct A *a)
  requires(wrapped(a))
{
  struct A a2;

  a2 = *a;
  assert(a2.y == a->y);
}

void test2(struct A *a)
  requires(wrapped(a))
{
  struct A a2;

  foo(&a2);
  a2 = *a;
  assert(a2.y == a->y);
}
`
Verification of test1 succeeded.
Verification of test2 succeeded.
`
