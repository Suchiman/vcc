#include <vcc2.h>

typedef unsigned __int32 UINT32;

void foo(UINT32 n)
{
  UINT32 i = unchecked(1 << n);
}
`
Verification of foo failed.
testcase(7,31) : error VC8519: Assertion 'n in admissible range (in shift)' did not verify.
`
#include <vcc2.h>

typedef unsigned __int32 UINT32;

void foo(UINT32 n)
  requires(n < 32)
{
  UINT32 i = unchecked(1 << n);
}
`
Verification of foo succeeded.
`
#include <vcc2.h>

unsigned int PowerOfTwo(unsigned int i)
  requires(i < 32)
{	
  return 1 << i;
}
static int foo(){
  return (int)(PowerOfTwo(3)-8);
}
`
Verification of PowerOfTwo succeeded.
Verification of foo failed.
testcase(9,16) : error VC8004: PowerOfTwo(3)-8 might overflow.
testcase(9,16) : error VC8518: Assertion 'PowerOfTwo(3)-8 fits range of int32_t' did not verify.
`
#include <vcc2.h>

 unsigned int test(unsigned int i) {
   i &= (0xFFFFFFFF >> 1) << 1;
   return i;
 }
 int foo() {
   unsigned int i = test(3);
   return (int)(i - 2);
 }
`
Verification of test succeeded.
Verification of foo failed.
testcase(9,17) : error VC8004: i - 2 might overflow.
testcase(9,17) : error VC8518: Assertion 'i - 2 fits range of int32_t' did not verify.
`
#include <vcc2.h>

unsigned int test() {
  unsigned int i = 0;
  i += 1 << 31;
  return i;
}
int foo(){
  return (int)(test() - 0x80000000);
}
`
Verification of test succeeded.
Verification of foo failed.
testcase(9,16) : error VC8004: test() - 0x80000000 might overflow.
`