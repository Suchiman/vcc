#include <vcc2.h>

typedef struct itype_instr_t {
  unsigned opc;
  unsigned rs1;
} itype_instr_t;

ispure _Bool one_or_two(itype_instr_t i)
  ensures(result == (i.opc==1 || i.opc==2))
  reads(set_empty())
{
	return i.opc==1 || i.opc==2;
}

_Bool one_or_two_alternative(itype_instr_t i)
	ensures(result == (one_or_two(i))) 
  reads(set_empty())
{
	return one_or_two(i);
}
`
Verification of one_or_two succeeded.
Verification of one_or_two_alternative succeeded.
Verification of one_or_two#reads succeeded.
`
#include <vcc2.h>

typedef struct S {
  unsigned __int8 a;  
  unsigned __int16 b;
  unsigned __int32 c;
  unsigned __int8 d;
} S;

_Bool f(S s)
  requires(s.a == 1 && s.b == 2 && s.c == 3 && s.d == 4)
  reads(set_empty())

{
  unsigned __int8 a = s.a;  
  unsigned __int16 b = s.b;
  unsigned __int32 c = s.c;
  unsigned __int8 d = s.d;  
}

_Bool g(S s)
  reads(set_empty())
{
  s.a = (unsigned __int8)1;
  s.b = (unsigned __int16)2;
  s.c = (unsigned __int32)3;
  s.d = (unsigned __int8)4;
  f(s);
}

`
Verification of f succeeded.
Verification of g succeeded.
`