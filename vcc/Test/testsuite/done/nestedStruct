#include <vcc.h>

struct Core {
  unsigned __int64 a;
  unsigned __int64 b;
};

struct Outer {
  struct Core core;
};


ispure struct Outer foo();

void bar()
  requires(foo().core.a == 0) {
}

`
Verification of bar succeeded.
`
#include <vcc.h>

typedef 
  struct Bar {
    struct SubBar {
      int x;
    } sub;
  } 
  Bar_t;

int main() {
  struct Bar b;
  struct SubBar sb;
  sb = b.sub;
  return 0;
}
`
Verification of main succeeded.
`
#include <vcc.h>

typedef struct _X { int c; } X;
typedef struct _Y { X z; int a; } Y;

void bar(X t) { }

void baz(X *p) { }

void foo(Y S) { 
  int a = S.a;
  bar(S.z);
  baz(&S.z);
}
`
Verification of bar succeeded.
Verification of baz succeeded.
Verification of foo succeeded.
`
