#include <vcc.h>
#include <sal.h>

typedef unsigned long long int size_t;

typedef struct{
  short a;
  int y;
  int empty:2;
  short b;
  int full:5;
} Status, *PStatus ;

void BitfieldReadTestOk(PStatus s)
  requires(thread_local(s))
{ int x;
  
  x = s->empty;
  x = s->b;
  x = s->full;
}

void BitfieldWriteTestOk(PStatus s)
  ensures(s->full==2)
  writes(extent(s))
{
  s->full = 2;
}

void BitfieldSimpleFramingTestOk(PStatus s)
  ensures(s->full==2)
  writes(extent(s))
{
  s->full = 2;
  s->empty = 0;
}

typedef struct{
  int x:3;
  int between;
  int y:3;
} Point, *PPoint ;

void BitfieldSimpleFraming2TestOk(PPoint s)
  ensures(s->x==2)
  writes(extent(s))
{
  s->x = 2;
  s->y = 0;
}

typedef struct {
  int x:9;
  int y:3;
} XY, *PXY ;

void BitfieldComplexFramingTestOk(PXY s)
  ensures(s->x==2)   
  writes(extent(s))
{
  s->x = 2;
  s->y = 0;
}

typedef struct {
  int x: 10;
  int y: 30;
} S, *PS;

void BitfieldTestOk(PS s)
  writes(extent(s))
{
  s->x = 2;
  s->y = 0;
}

void BitFieldReadWriteTestOk(PStatus s)
  ensures(s->empty ==0)
  ensures(s->full == old(s->empty)+1)
  writes(extent(s))
{
  s->full = s->empty+1;
  s->empty = 0;
}


`
Verification of BitfieldReadTestOk succeeded.
Verification of BitfieldWriteTestOk succeeded.
Verification of BitfieldSimpleFramingTestOk succeeded.
Verification of BitfieldSimpleFraming2TestOk succeeded.
Verification of BitfieldComplexFramingTestOk succeeded.
Verification of BitfieldTestOk succeeded.
Verification of BitFieldReadWriteTestOk succeeded.
`
#include <vcc.h>

struct S {
  unsigned __int64 a:4;  
  unsigned __int64 b:12;
  unsigned __int64 c:48;
};

struct T {
  __int64 a:4;  
  __int64 b:12;
  __int64 c:48;
};


void fooS_shouldFail(unsigned __int64 x) {
  struct S s;
  s.a = x;
  assert(s.a == x);
}

void fooS_ok(unsigned __int64 x) 
  requires(x <= 15)
{
  struct S s;
  s.a = x;
  assert(s.a == x);
}

void fooT_shouldFail(__int64 x) {
  struct T t;
  t.a = x;
}

void fooT_ok(__int64 x) 
  requires(-8 <= x && x <= 7)
{
  struct T t;
  t.a = x;
  assert(t.a == x);
}

`
Verification of fooS_shouldFail failed.
testcase(18,9) : error VC8503: Assertion '0 <= x && x <= 15 in bitfield assignment' did not verify.
Verification of fooS_ok succeeded.
Verification of fooT_shouldFail failed.
testcase(32,9) : error VC8503: Assertion '-8 <= x && x <= 7 in bitfield assignment' did not verify.
Verification of fooT_ok succeeded.
`

typedef struct _S {
  int a : 16;
  int b : 8;
  int c : 8;
} S, *PS;

void foo() {
  S s;
  int *p = &s.a;
}

void bar() {
  S s;
  PS ps = &s;
  int *p = &ps->a;
}

`
testcase(10,12) : error VC0000: '&' on bit field ignored
testcase(16,12) : error VC0000: '&' on bit field ignored
`
