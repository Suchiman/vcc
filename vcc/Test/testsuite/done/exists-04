#include <vcc.h>

void foo(int *p)
  requires(is_thread_local_array(p,11))
  requires(forall(int x; 0 <= x && x <= 10 ==> p[x] > 0))
{
  assert(!exists(int x; !(0 <= x && x <= 5 ==> p[x] > 0)));
}

void bar(int *p)
  requires(is_thread_local_array(p,11))
  requires(!exists(int x; !(0 <= x && x <= 10 ==> p[x] > 0)))
  ensures(forall(int x; 0 <= x && x <= 5 ==> p[x] > 0))
{
}

ispure bool baz(int x);

bool qux(int z)
  ensures(result ==> exists(int p; baz(p)))
{
  return baz(z/2);
}
`
Verification of foo succeeded.
Verification of bar succeeded.
Verification of qux succeeded.
`
